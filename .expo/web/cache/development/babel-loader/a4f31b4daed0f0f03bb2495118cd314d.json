{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\manik\\\\Documents\\\\react-native\\\\Investment_app\\\\node_modules\\\\react-navigation-header-buttons\\\\src\\\\overflowMenu\\\\OverflowMenu.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport { extractOverflowButtonData, overflowMenuPressHandlerDropdownMenu, defaultOnOverflowMenuPress } from \"../overflowMenuPressHandlers\";\nimport { OVERFLOW_TOP, OverflowMenuContext } from \"./OverflowMenuContext\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { HeaderButton } from \"../HeaderButton\";\nimport { OVERFLOW_BUTTON_TEST_ID } from \"../e2e\";\nimport { ButtonsWrapper } from \"../ButtonsWrapper\";\nexport var OverflowMenu = function OverflowMenu(_ref) {\n  var children = _ref.children,\n      OverflowIcon = _ref.OverflowIcon,\n      accessibilityLabel = _ref.accessibilityLabel,\n      testID = _ref.testID,\n      style = _ref.style,\n      onPress = _ref.onPress,\n      left = _ref.left;\n  var toggleMenu = React.useContext(OverflowMenuContext);\n  var btnRef = React.useRef(null);\n  var renderButtonElement = React.useCallback(function () {\n    return OverflowIcon;\n  }, [OverflowIcon]);\n  var usedOnPress = React.useCallback(function () {\n    var titlesAndOnPresses = onPress === overflowMenuPressHandlerDropdownMenu ? [] : extractOverflowButtonData(children);\n    onPress({\n      children: children,\n      hiddenButtons: titlesAndOnPresses,\n      overflowButtonRef: btnRef.current,\n      _private_toggleMenu: toggleMenu\n    });\n  }, [children, onPress, toggleMenu]);\n  var validChildren = React.Children.toArray(children).filter(React.isValidElement);\n\n  if (validChildren.length === 0) {\n    return null;\n  }\n\n  return React.createElement(ButtonsWrapper, {\n    left: left,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    ref: btnRef,\n    collapsable: false,\n    style: styles.overflowMenuView,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }), React.createElement(HeaderButton, {\n    title: \"overflow menu\",\n    renderButtonElement: renderButtonElement,\n    style: [styles.icon, style],\n    onPress: usedOnPress,\n    accessibilityLabel: accessibilityLabel,\n    testID: testID,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }));\n};\nOverflowMenu.defaultProps = {\n  accessibilityLabel: 'More options',\n  OverflowIcon: React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }),\n  onPress: defaultOnOverflowMenuPress,\n  testID: OVERFLOW_BUTTON_TEST_ID,\n  left: false\n};\nvar styles = StyleSheet.create({\n  icon: _objectSpread({}, Platform.select({\n    android: {\n      marginRight: 9,\n      marginLeft: 7\n    }\n  })),\n  overflowMenuView: {\n    position: 'absolute',\n    top: -OVERFLOW_TOP,\n    right: 0,\n    backgroundColor: 'transparent',\n    width: 1,\n    height: 1\n  }\n});","map":{"version":3,"sources":["C:/Users/manik/Documents/react-native/Investment_app/node_modules/react-navigation-header-buttons/src/overflowMenu/OverflowMenu.js"],"names":["React","extractOverflowButtonData","overflowMenuPressHandlerDropdownMenu","defaultOnOverflowMenuPress","OVERFLOW_TOP","OverflowMenuContext","HeaderButton","OVERFLOW_BUTTON_TEST_ID","ButtonsWrapper","OverflowMenu","children","OverflowIcon","accessibilityLabel","testID","style","onPress","left","toggleMenu","useContext","btnRef","useRef","renderButtonElement","useCallback","usedOnPress","titlesAndOnPresses","hiddenButtons","overflowButtonRef","current","_private_toggleMenu","validChildren","Children","toArray","filter","isValidElement","length","styles","overflowMenuView","icon","defaultProps","StyleSheet","create","Platform","select","android","marginRight","marginLeft","position","top","right","backgroundColor","width","height"],"mappings":"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","sourcesContent":["// @flow\nimport * as React from 'react';\nimport {\n  extractOverflowButtonData,\n  overflowMenuPressHandlerDropdownMenu,\n  defaultOnOverflowMenuPress,\n  type OnOverflowMenuPressParams,\n} from '../overflowMenuPressHandlers';\nimport { OVERFLOW_TOP, OverflowMenuContext } from './OverflowMenuContext';\nimport { View, StyleSheet, Platform } from 'react-native';\nimport { HeaderButton } from '../HeaderButton';\nimport type { ViewStyleProp } from 'react-native/Libraries/StyleSheet/StyleSheet';\nimport { OVERFLOW_BUTTON_TEST_ID } from '../e2e';\nimport { ButtonsWrapper } from '../ButtonsWrapper';\n\nexport type OverflowMenuProps = {|\n  children: React.Node,\n  OverflowIcon: React.Element<any>,\n  style?: ViewStyleProp,\n  testID: string,\n  accessibilityLabel: string,\n  onPress: (OnOverflowMenuPressParams) => any,\n  left: boolean,\n|};\n\nexport const OverflowMenu = ({\n  children,\n  OverflowIcon,\n  accessibilityLabel,\n  testID,\n  style,\n  onPress,\n  left,\n}: OverflowMenuProps) => {\n  const toggleMenu = React.useContext(OverflowMenuContext);\n  const btnRef = React.useRef<View | null>(null);\n  const renderButtonElement = React.useCallback(() => OverflowIcon, [OverflowIcon]);\n\n  const usedOnPress = React.useCallback(() => {\n    const titlesAndOnPresses =\n      onPress === overflowMenuPressHandlerDropdownMenu ? [] : extractOverflowButtonData(children);\n    onPress({\n      children,\n      hiddenButtons: titlesAndOnPresses,\n      overflowButtonRef: btnRef.current,\n      _private_toggleMenu: toggleMenu,\n    });\n  }, [children, onPress, toggleMenu]);\n\n  const validChildren = React.Children.toArray(children).filter(React.isValidElement);\n  if (validChildren.length === 0) {\n    return null;\n  }\n\n  return (\n    <ButtonsWrapper left={left}>\n      <View ref={btnRef} collapsable={false} style={styles.overflowMenuView} />\n      <HeaderButton\n        title=\"overflow menu\"\n        renderButtonElement={renderButtonElement}\n        style={[styles.icon, style]}\n        onPress={usedOnPress}\n        accessibilityLabel={accessibilityLabel}\n        testID={testID}\n      />\n    </ButtonsWrapper>\n  );\n};\n\nOverflowMenu.defaultProps = {\n  accessibilityLabel: 'More options',\n  OverflowIcon: <View />,\n  onPress: defaultOnOverflowMenuPress,\n  testID: OVERFLOW_BUTTON_TEST_ID,\n  left: false, // this is needed only when OverflowMenu is rendered without HeaderButtons\n};\n\nconst styles = StyleSheet.create({\n  icon: {\n    ...Platform.select({\n      android: {\n        marginRight: 9,\n        marginLeft: 7,\n      },\n    }),\n  },\n  overflowMenuView: {\n    // these are really just needed bcs of the native android popup menu\n    position: 'absolute',\n    top: -OVERFLOW_TOP,\n    // TODO android actually has a little gap on the right of the menu\n    right: 0,\n    backgroundColor: 'transparent',\n    width: 1,\n    height: 1,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\manik\\\\Documents\\\\react-native\\\\Investment_app\\\\screens\\\\StockDetailScreen.js\";\nimport React, { useEffect, useState } from 'react';\nimport moment, { utc } from 'moment';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { useSelector } from 'react-redux';\nimport invest from \"../model/invest\";\n\nvar StockDetailScreen = function StockDetailScreen(props) {\n  var shares = props.navigation.getParam('shares');\n  var symbol = props.navigation.getParam('symbol');\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      Price = _useState2[0],\n      setPrice = _useState2[1];\n\n  var month = new moment(new Date()).format('MM');\n  var day = new moment(new Date()).format('DD') - 1;\n  var year = new moment(new Date()).format('YYYY');\n  var date = year + '-' + month + '-' + day;\n  var timeInterval = 1;\n  var APIKey = 'PL7DXUPGDYWKO1QD';\n  var investments = useSelector(function (state) {\n    return state.invest.investments.find(function (invest) {\n      return invest.symbol === symbol;\n    });\n  });\n  var price = investments['price'];\n\n  function StockInfo() {\n    var response, responseJson, data;\n    return _regeneratorRuntime.async(function StockInfo$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(fetch(\"https://www.alphavantage.co/query?function=TIME_SERIES_INTRADAY&symbol=\" + symbol + \"&interval=\" + timeInterval + \"min&apikey=\" + APIKey));\n\n          case 3:\n            response = _context.sent;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 6:\n            responseJson = _context.sent;\n            data = responseJson['Time Series (1min)'][date + ' 20:00:00']['4. close'];\n            setPrice(data);\n            _context.next = 14;\n            break;\n\n          case 11:\n            _context.prev = 11;\n            _context.t0 = _context[\"catch\"](0);\n            console.error('This is the error: ', _context.t0);\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 11]], Promise);\n  }\n\n  useEffect(function () {\n    StockInfo();\n  }, [day]);\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.symbol,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, symbol)), React.createElement(View, {\n    style: styles.detailContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, \"You own \", shares, \" shares\"), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, \"You bought it at \", price), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, \"shares were bought at \", investments.id), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, \"The price yesterday was $\", Math.round(Price).toFixed(2))));\n};\n\nvar styles = StyleSheet.create({\n  detailContainer: {\n    alignItems: 'center',\n    marginTop: 40\n  },\n  symbol: {\n    fontSize: 40,\n    padding: 20,\n    textAlign: 'left'\n  }\n});\nexport default StockDetailScreen;","map":{"version":3,"sources":["C:/Users/manik/Documents/react-native/Investment_app/screens/StockDetailScreen.js"],"names":["React","useEffect","useState","moment","utc","useSelector","invest","StockDetailScreen","props","shares","navigation","getParam","symbol","Price","setPrice","month","Date","format","day","year","date","timeInterval","APIKey","investments","state","find","price","StockInfo","fetch","response","json","responseJson","data","console","error","styles","detailContainer","id","Math","round","toFixed","StyleSheet","create","alignItems","marginTop","fontSize","padding","textAlign"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\r\nimport moment, { utc } from 'moment'\r\nimport { View, Text, StyleSheet } from 'react-native'\r\nimport { useSelector } from 'react-redux';\r\nimport invest from '../model/invest';\r\n\r\n\r\nconst StockDetailScreen = props => {\r\n    \r\n    // Parameters fetched from navi\r\n    const shares = props.navigation.getParam('shares')\r\n    const symbol = props.navigation.getParam('symbol')\r\n\r\n    // price state\r\n    const [Price, setPrice] = useState()\r\n\r\n    // LOOK at this for fetch info https://reactnative.dev/docs/network#known-issues-with-fetch-and-cookie-based-authentication\r\n\r\n    // Date Info\r\n    const month = new moment(new Date()).format('MM')\r\n    const day = (new moment(new Date()).format('DD')) - 1\r\n    const year = new moment(new Date()).format('YYYY')\r\n    const date = (year + '-' + month + '-' + day)\r\n\r\n    // API Info\r\n    const timeInterval = 1\r\n    const APIKey = 'PL7DXUPGDYWKO1QD'\r\n\r\n    const investments = useSelector(state => state.invest.investments.find(invest => invest.symbol === symbol))\r\n    const price = investments['price']\r\n\r\n    async function StockInfo() {\r\n        try {\r\n            let response = await fetch(\r\n                `https://www.alphavantage.co/query?function=TIME_SERIES_INTRADAY&symbol=${symbol}&interval=${timeInterval}min&apikey=${APIKey}`\r\n            );\r\n            let responseJson = await response.json()\r\n            const data = responseJson['Time Series (1min)'][date + ' 20:00:00']['4. close']\r\n            // console.log(responseJson['Time Series (1min)'][date + ' 20:00:00'])\r\n            setPrice(data)\r\n        } catch(error) {\r\n            console.error('This is the error: ', error)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        StockInfo()\r\n    }, [day])\r\n\r\n\r\n    return (\r\n        <View>\r\n            <View>\r\n                <Text style={styles.symbol}>{symbol}</Text>\r\n            </View>\r\n            <View style={styles.detailContainer}>\r\n                <Text>You own {shares} shares</Text>\r\n                <Text>You bought it at {price}</Text>\r\n                <Text>shares were bought at {investments.id}</Text>\r\n                <Text>The price yesterday was ${Math.round(Price).toFixed(2)}</Text>\r\n            </View>\r\n        </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create ({\r\n    detailContainer: {\r\n        alignItems: 'center',\r\n        marginTop: 40,\r\n    },\r\n    symbol: {\r\n        fontSize: 40,\r\n        padding: 20,\r\n        textAlign: 'left'\r\n    },\r\n})\r\n\r\nexport default StockDetailScreen;\r\n"]},"metadata":{},"sourceType":"module"}
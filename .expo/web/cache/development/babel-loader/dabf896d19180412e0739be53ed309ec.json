{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/maniksoomro/Documents/react-native/Investment_app/Screen/AddScreen.js\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Input from \"../components/input\";\nimport { AntDesign } from '@expo/vector-icons';\nimport * as SQLite from 'expo-sqlite';\nimport { insertInvestment } from \"../helpers/investDB\";\n\nvar AddScreen = function AddScreen(props) {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      symbol = _useState2[0],\n      setSymbol = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      shares = _useState4[0],\n      setShares = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      price = _useState6[0],\n      setPrice = _useState6[1];\n\n  var insertInvestment = function insertInvestment() {\n    var dbResult;\n    return _regeneratorRuntime.async(function insertInvestment$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(insertInvestment('APPL', 1, '$189'));\n\n          case 3:\n            dbResult = _context.sent;\n            console.log('investment has been inserted, my guy');\n            _context.next = 11;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            console.log('there was an error, my guy');\n            console.log(_context.t0);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  console.log(insertInvestment);\n\n  var sharesHandler = function sharesHandler(sharesNum) {\n    setShares(sharesNum);\n  };\n\n  var symbolHandler = function symbolHandler(symbolText) {\n    setSymbol(symbolText);\n  };\n\n  var priceHandler = function priceHandler(priceNum) {\n    setPrice(priceNum);\n  };\n\n  return React.createElement(TouchableWithoutFeedback, {\n    onPress: function onPress() {\n      Keyboard.dismiss();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.screen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.symbolView,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.symbolText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, \"Stock Symbol\"), React.createElement(TextInput, {\n    style: styles.symbolInput,\n    placeholder: \"eg. APPL\",\n    value: symbol,\n    onChangeText: symbolHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  })), React.createElement(View, {\n    style: styles.sharesView,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.sharesText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, \"Shares Bought\"), React.createElement(TextInput, {\n    placeholder: \"0\",\n    style: styles.sharesInput,\n    value: shares,\n    onChangeText: sharesHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  })), React.createElement(View, {\n    style: styles.priceView,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.priceText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, \"Price\"), React.createElement(TextInput, {\n    style: styles.priceInput,\n    placeholder: \"$1\",\n    value: price,\n    onChangeText: priceHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  })), React.createElement(Button, {\n    title: \"Submit\",\n    style: styles.submit,\n    onPress: insertInvestment,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  })));\n};\n\nvar styles = StyleSheet.create({\n  screen: {\n    flex: 1\n  },\n  text: {\n    fontSize: 24\n  },\n  backButton: {\n    marginTop: 30,\n    marginLeft: 10\n  },\n  symbolView: {\n    flexDirection: 'row',\n    marginTop: 120\n  },\n  symbolInput: {\n    marginLeft: 90,\n    fontSize: 15\n  },\n  symbolText: {\n    fontSize: 15,\n    marginLeft: 50\n  },\n  sharesView: {\n    flexDirection: 'row',\n    marginTop: 20\n  },\n  sharesText: {\n    fontSize: 15,\n    marginLeft: 50\n  },\n  sharesInput: {\n    marginLeft: 85,\n    fontSize: 15\n  },\n  priceView: {\n    flexDirection: 'row',\n    marginTop: 20\n  },\n  priceText: {\n    fontSize: 15,\n    marginLeft: 50\n  },\n  priceInput: {\n    marginLeft: 150,\n    fontSize: 15\n  }\n});\nexport default AddScreen;","map":{"version":3,"sources":["/Users/maniksoomro/Documents/react-native/Investment_app/Screen/AddScreen.js"],"names":["React","useEffect","useState","Input","AntDesign","SQLite","insertInvestment","AddScreen","props","symbol","setSymbol","shares","setShares","price","setPrice","dbResult","console","log","sharesHandler","sharesNum","symbolHandler","symbolText","priceHandler","priceNum","Keyboard","dismiss","styles","screen","symbolView","symbolInput","sharesView","sharesText","sharesInput","priceView","priceText","priceInput","submit","StyleSheet","create","flex","text","fontSize","backButton","marginTop","marginLeft","flexDirection"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { View, Text, TextInput, StyleSheet, Button, Alert, TouchableWithoutFeedback, Keyboard, TouchableOpacity } from 'react-native';\nimport Input from '../components/input';\nimport { AntDesign } from '@expo/vector-icons'\nimport * as SQLite from 'expo-sqlite'\n\nimport { insertInvestment } from '../helpers/investDB'\n\nconst AddScreen = props => {\n\n  const [symbol, setSymbol] = useState('');\n  const [shares, setShares] = useState('');\n  const [price, setPrice] = useState('');\n\n  // after this app is done with the return statement this useEffect \n  // is called after this\n\n  //const dbResult = await insertInvestment(APPL, 2, $189);\n\n  const insertInvestment = async () => {\n    try {\n      const dbResult = await insertInvestment('APPL', 1, '$189')\n      console.log('investment has been inserted, my guy')\n    } catch (err) {\n      console.log('there was an error, my guy')\n      console.log(err);\n    }\n  }\n\n  console.log(insertInvestment);\n\n  const sharesHandler = sharesNum => {\n    setShares(sharesNum)\n  };\n\n  const symbolHandler = symbolText => {\n    setSymbol(symbolText)\n  }\n\n  const priceHandler = priceNum => {\n    setPrice(priceNum);\n  }\n\n  return (\n    <TouchableWithoutFeedback onPress={() => { Keyboard.dismiss() }}>\n      <View style={styles.screen}>\n        <View style={styles.symbolView}>\n          <Text style={styles.symbolText}>Stock Symbol</Text>\n          <TextInput style={styles.symbolInput} placeholder='eg. APPL' value={symbol} onChangeText={symbolHandler} />\n        </View>\n        <View style={styles.sharesView}>\n          <Text style={styles.sharesText}>Shares Bought</Text>\n          <TextInput placeholder='0' style={styles.sharesInput} value={shares} onChangeText={sharesHandler} />\n        </View>\n        <View style={styles.priceView}>\n          <Text style={styles.priceText}>Price</Text>\n          <TextInput style={styles.priceInput} placeholder='$1' value={price} onChangeText={priceHandler} />\n        </View>\n        <Button title='Submit' style={styles.submit} onPress={insertInvestment} />\n      </View>\n    </TouchableWithoutFeedback>\n  );\n};\n\nconst styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n  },\n  text: {\n    fontSize: 24,\n  },\n  backButton: {\n    marginTop: 30,\n    marginLeft: 10\n  },\n  symbolView: {\n    flexDirection: 'row',\n    marginTop: 120\n  },\n  symbolInput: {\n    marginLeft: 90,\n    fontSize: 15,\n  },\n  symbolText: {\n    fontSize: 15,\n    marginLeft: 50,\n  },\n  sharesView: {\n    flexDirection: 'row',\n    marginTop: 20\n  },\n  sharesText: {\n    fontSize: 15,\n    marginLeft: 50,\n  },\n  sharesInput: {\n    marginLeft: 85,\n    fontSize: 15,\n  },\n  priceView: {\n    flexDirection: 'row',\n    marginTop: 20\n  },\n  priceText: {\n    fontSize: 15,\n    marginLeft: 50,\n  },\n  priceInput: {\n    marginLeft: 150,\n    fontSize: 15,\n  },\n});\n\nexport default AddScreen;"]},"metadata":{},"sourceType":"module"}